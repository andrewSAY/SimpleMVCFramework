<?php

namespace LW\Model\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LinkRepository extends EntityRepository
{
    public function getLinksByGrouop($groupId)
    {
        $links = $this->getEntityManager()->createQueryBuilder()
            ->select('l.id as id, l.userId as userId, l.groupId as groupId')
            ->from('Lw\Model\Entity\Link', 'l')
            ->where('l.groupId = ?0')
            ->addOrderBy('l.userId', 'ASC')
            ->getQuery()->execute(array(0 => $groupId));
        return $links;
    }

    public function deleteLinks($links)
    {
        $params = array();
        for ($i = 0; $i < count($links); $i++)
        {
            $params[] = '?' . $i;
        }

        $params = implode(', ', $params);

        $this->getEntityManager()->createQueryBuilder()
            ->delete('Lw\Model\Entity\Link', 'l')
            ->where("l.id in ($params)")
            ->getQuery()->execute($links);
    }

    public function insertLinks($links)
    {
        $date = (new \DateTime())->format('Y-m-d h:m:i');
        $template = 'insert into links (user_id, group_id, created_at, updated_at) values(?, ?, ?, ?)';
        $query = array();
        $params = array();
        foreach ($links as $link)
        {
            $params[] = $link['userId'];
            $params[] = $link['groupId'];
            $params[] = $date;
            $params[] = $date;
            $query[] = $template;
        }

        $query = implode('; ', $query);
        $this->getEntityManager()->getConnection()->executeUpdate($query, $params);
    }
}
